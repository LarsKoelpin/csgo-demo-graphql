{"version":3,"sources":["App.js","schema.js","serviceWorker.js","index.js"],"names":["x","buildClientSchema","__schema","directives","args","defaultValue","description","name","type","kind","ofType","locations","mutationType","queryType","subscriptionType","types","enumValues","fields","deprecationReason","isDeprecated","inputFields","interfaces","possibleTypes","myMockServer","printSchema","mockServer","demo","header","mapName","snapshotRate","ticks","participants","entityId","position","team","fetcher","abc","query","App","schema","defaultQuery","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.88d035dd.chunk.js","sourcesContent":["import React from 'react';\nimport \"graphiql/graphiql.min.css\";\nimport {GraphiQL} from \"graphiql\";\nimport {mockServer} from \"graphql-tools\";\nimport {buildClientSchema, printSchema} from \"graphql/utilities\";\nimport {schema} from \"./schema\";\n\nconst defaultQuery = `\n{\n  demo(freq: 0.2, demoFile: \"asd\") {\n    header {\n      mapName\n    }\n    ticks {\n      participants {\n        entityId\n\n      }\n    }\n  }\n}\n`;\n\nconst x = buildClientSchema(schema.data);\nconst rawSchema = printSchema(x);\n\nconst myMockServer = mockServer(x, {\n  demo: () => ({\n    header: {\n      mapName: \"abc\",\n      snapshotRate: 0.2\n    },\n    ticks: [\n      {\n        participants: [\n          {\n            entityId: 7,\n            position: {\n              x: -1871.7869873046875\n            },\n            team: 2\n          }\n        ]\n      }\n    ]\n  })\n});\n\nconst fetcher = (abc) => {\n  return myMockServer.query(abc.query);\n};\n\n\nexport function App() {\n  return (<GraphiQL\n      schema={x}\n      fetcher={fetcher}\n      defaultQuery={defaultQuery}\n    />\n  );\n}\n","export const schema = {\n  data: {\n    __schema: {\n      directives: [\n        {\n          args: [\n            {\n              defaultValue: null,\n              description: \"Included when true.\",\n              name: \"if\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n              }\n            }\n          ],\n          description:\n            \"Directs the executor to include this field or fragment only when the `if` argument is true.\",\n          locations: [\"FIELD\", \"FRAGMENT_SPREAD\", \"INLINE_FRAGMENT\"],\n          name: \"include\"\n        },\n        {\n          args: [\n            {\n              defaultValue: null,\n              description: \"Skipped when true.\",\n              name: \"if\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n              }\n            }\n          ],\n          description:\n            \"Directs the executor to skip this field or fragment when the `if` argument is true.\",\n          locations: [\"FIELD\", \"FRAGMENT_SPREAD\", \"INLINE_FRAGMENT\"],\n          name: \"skip\"\n        },\n        {\n          args: [\n            {\n              defaultValue: '\"No longer supported\"',\n              description:\n                \"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formattedin [Markdown](https://daringfireball.net/projects/markdown/).\",\n              name: \"reason\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            }\n          ],\n          description:\n            \"Marks an element of a GraphQL schema as no longer supported.\",\n          locations: [\"FIELD_DEFINITION\", \"ENUM_VALUE\"],\n          name: \"deprecated\"\n        }\n      ],\n      mutationType: null,\n      queryType: { name: \"RootQuery\" },\n      subscriptionType: null,\n      types: [\n        {\n          description: \"\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"carrier\",\n              type: { kind: \"OBJECT\", name: \"players\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"lastOnGroundPosition\",\n              type: { kind: \"OBJECT\", name: \"position\", ofType: null }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"bomb\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"deprecationReason\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"description\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"isDeprecated\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"name\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"String\", ofType: null }\n              }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"__EnumValue\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document. \\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"args\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: {\n                  kind: \"LIST\",\n                  name: null,\n                  ofType: {\n                    kind: \"NON_NULL\",\n                    name: null,\n                    ofType: {\n                      kind: \"OBJECT\",\n                      name: \"__InputValue\",\n                      ofType: null\n                    }\n                  }\n                }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"description\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"locations\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: {\n                  kind: \"LIST\",\n                  name: null,\n                  ofType: {\n                    kind: \"NON_NULL\",\n                    name: null,\n                    ofType: {\n                      kind: \"ENUM\",\n                      name: \"__DirectiveLocation\",\n                      ofType: null\n                    }\n                  }\n                }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"name\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"String\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: \"Use `locations`.\",\n              description: \"\",\n              isDeprecated: true,\n              name: \"onField\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: \"Use `locations`.\",\n              description: \"\",\n              isDeprecated: true,\n              name: \"onFragment\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: \"Use `locations`.\",\n              description: \"\",\n              isDeprecated: true,\n              name: \"onOperation\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n              }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"__Directive\",\n          possibleTypes: null\n        },\n        {\n          description: \"\",\n          enumValues: null,\n          fields: [\n            {\n              args: [\n                {\n                  defaultValue: null,\n                  description: \"\",\n                  name: \"freq\",\n                  type: {\n                    kind: \"NON_NULL\",\n                    name: null,\n                    ofType: { kind: \"SCALAR\", name: \"Float\", ofType: null }\n                  }\n                },\n                {\n                  defaultValue: null,\n                  description: \"\",\n                  name: \"demoFile\",\n                  type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n                }\n              ],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"demo\",\n              type: { kind: \"OBJECT\", name: \"demo\", ofType: null }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"RootQuery\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point). \",\n          enumValues: null,\n          fields: null,\n          inputFields: null,\n          interfaces: null,\n          kind: \"SCALAR\",\n          name: \"Float\",\n          possibleTypes: null\n        },\n        {\n          description: \"\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"angleX\",\n              type: { kind: \"SCALAR\", name: \"Float\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"angleY\",\n              type: { kind: \"SCALAR\", name: \"Float\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"armor\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"deaths\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"entityId\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"equipment\",\n              type: {\n                kind: \"LIST\",\n                name: null,\n                ofType: { kind: \"OBJECT\", name: \"equipment\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"flashDuration\",\n              type: { kind: \"SCALAR\", name: \"Float\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"hasDefuseKit\",\n              type: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"hasHelmet\",\n              type: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"hp\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"isDefusing\",\n              type: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"isInBuyzone\",\n              type: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"isNpc\",\n              type: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"isPlanting\",\n              type: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"kills\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"money\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"name\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"position\",\n              type: { kind: \"OBJECT\", name: \"position\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"team\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"players\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"A list of all directives supported by this server.\",\n              isDeprecated: false,\n              name: \"directives\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: {\n                  kind: \"LIST\",\n                  name: null,\n                  ofType: {\n                    kind: \"NON_NULL\",\n                    name: null,\n                    ofType: {\n                      kind: \"OBJECT\",\n                      name: \"__Directive\",\n                      ofType: null\n                    }\n                  }\n                }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description:\n                \"If this server supports mutation, the type that mutation operations will be rooted at.\",\n              isDeprecated: false,\n              name: \"mutationType\",\n              type: { kind: \"OBJECT\", name: \"__Type\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"The type that query operations will be rooted at.\",\n              isDeprecated: false,\n              name: \"queryType\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"OBJECT\", name: \"__Type\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description:\n                \"If this server supports subscription, the type that subscription operations will be rooted at.\",\n              isDeprecated: false,\n              name: \"subscriptionType\",\n              type: { kind: \"OBJECT\", name: \"__Type\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"A list of all types supported by this server.\",\n              isDeprecated: false,\n              name: \"types\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: {\n                  kind: \"LIST\",\n                  name: null,\n                  ofType: {\n                    kind: \"NON_NULL\",\n                    name: null,\n                    ofType: { kind: \"OBJECT\", name: \"__Type\", ofType: null }\n                  }\n                }\n              }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"__Schema\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"description\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [\n                {\n                  defaultValue: \"false\",\n                  description: \"\",\n                  name: \"includeDeprecated\",\n                  type: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n                }\n              ],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"enumValues\",\n              type: {\n                kind: \"LIST\",\n                name: null,\n                ofType: {\n                  kind: \"NON_NULL\",\n                  name: null,\n                  ofType: { kind: \"OBJECT\", name: \"__EnumValue\", ofType: null }\n                }\n              }\n            },\n            {\n              args: [\n                {\n                  defaultValue: \"false\",\n                  description: \"\",\n                  name: \"includeDeprecated\",\n                  type: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n                }\n              ],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"fields\",\n              type: {\n                kind: \"LIST\",\n                name: null,\n                ofType: {\n                  kind: \"NON_NULL\",\n                  name: null,\n                  ofType: { kind: \"OBJECT\", name: \"__Field\", ofType: null }\n                }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"inputFields\",\n              type: {\n                kind: \"LIST\",\n                name: null,\n                ofType: {\n                  kind: \"NON_NULL\",\n                  name: null,\n                  ofType: { kind: \"OBJECT\", name: \"__InputValue\", ofType: null }\n                }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"interfaces\",\n              type: {\n                kind: \"LIST\",\n                name: null,\n                ofType: {\n                  kind: \"NON_NULL\",\n                  name: null,\n                  ofType: { kind: \"OBJECT\", name: \"__Type\", ofType: null }\n                }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"kind\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"ENUM\", name: \"__TypeKind\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"name\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"ofType\",\n              type: { kind: \"OBJECT\", name: \"__Type\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"possibleTypes\",\n              type: {\n                kind: \"LIST\",\n                name: null,\n                ofType: {\n                  kind: \"NON_NULL\",\n                  name: null,\n                  ofType: { kind: \"OBJECT\", name: \"__Type\", ofType: null }\n                }\n              }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"__Type\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"An enum describing what kind of type a given `__Type` is\",\n          enumValues: [\n            {\n              deprecationReason: null,\n              description:\n                \"Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.\",\n              isDeprecated: false,\n              name: \"INTERFACE\"\n            },\n            {\n              deprecationReason: null,\n              description:\n                \"Indicates this type is a union. `possibleTypes` is a valid field.\",\n              isDeprecated: false,\n              name: \"UNION\"\n            },\n            {\n              deprecationReason: null,\n              description:\n                \"Indicates this type is an enum. `enumValues` is a valid field.\",\n              isDeprecated: false,\n              name: \"ENUM\"\n            },\n            {\n              deprecationReason: null,\n              description:\n                \"Indicates this type is an input object. `inputFields` is a valid field.\",\n              isDeprecated: false,\n              name: \"INPUT_OBJECT\"\n            },\n            {\n              deprecationReason: null,\n              description:\n                \"Indicates this type is a list. `ofType` is a valid field.\",\n              isDeprecated: false,\n              name: \"LIST\"\n            },\n            {\n              deprecationReason: null,\n              description:\n                \"Indicates this type is a non-null. `ofType` is a valid field.\",\n              isDeprecated: false,\n              name: \"NON_NULL\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Indicates this type is a scalar.\",\n              isDeprecated: false,\n              name: \"SCALAR\"\n            },\n            {\n              deprecationReason: null,\n              description:\n                \"Indicates this type is an object. `fields` and `interfaces` are valid fields.\",\n              isDeprecated: false,\n              name: \"OBJECT\"\n            }\n          ],\n          fields: null,\n          inputFields: null,\n          interfaces: null,\n          kind: \"ENUM\",\n          name: \"__TypeKind\",\n          possibleTypes: null\n        },\n        {\n          description: \"\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"header\",\n              type: { kind: \"OBJECT\", name: \"header\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"ticks\",\n              type: {\n                kind: \"LIST\",\n                name: null,\n                ofType: { kind: \"OBJECT\", name: \"ticks\", ofType: null }\n              }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"demo\",\n          possibleTypes: null\n        },\n        {\n          description: \"\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"bomb\",\n              type: { kind: \"OBJECT\", name: \"bomb\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"participants\",\n              type: {\n                kind: \"LIST\",\n                name: null,\n                ofType: { kind: \"OBJECT\", name: \"players\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"tick\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"totalRoundsPlayed\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"ticks\",\n          possibleTypes: null\n        },\n        {\n          description: \"\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"mapName\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"snapshotRate\",\n              type: { kind: \"SCALAR\", name: \"Float\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"tickRate\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"header\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description:\n                \"A GraphQL-formatted string representing the default value for this input value.\",\n              isDeprecated: false,\n              name: \"defaultValue\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"description\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"name\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"String\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"type\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"OBJECT\", name: \"__Type\", ofType: null }\n              }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"__InputValue\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.\",\n          enumValues: [\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a union definition.\",\n              isDeprecated: false,\n              name: \"UNION\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to an enum definition.\",\n              isDeprecated: false,\n              name: \"ENUM\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to an enum value definition.\",\n              isDeprecated: false,\n              name: \"ENUM_VALUE\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a mutation operation.\",\n              isDeprecated: false,\n              name: \"MUTATION\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a schema definition.\",\n              isDeprecated: false,\n              name: \"SCHEMA\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a scalar definition.\",\n              isDeprecated: false,\n              name: \"SCALAR\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a object definition.\",\n              isDeprecated: false,\n              name: \"OBJECT\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a fragment definition.\",\n              isDeprecated: false,\n              name: \"FRAGMENT_DEFINITION\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a field definition.\",\n              isDeprecated: false,\n              name: \"FIELD_DEFINITION\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to an interface definition.\",\n              isDeprecated: false,\n              name: \"INTERFACE\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a subscription operation.\",\n              isDeprecated: false,\n              name: \"SUBSCRIPTION\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a fragment spread.\",\n              isDeprecated: false,\n              name: \"FRAGMENT_SPREAD\"\n            },\n            {\n              deprecationReason: null,\n              description:\n                \"Location adjacent to an input object type definition.\",\n              isDeprecated: false,\n              name: \"INPUT_OBJECT\"\n            },\n            {\n              deprecationReason: null,\n              description:\n                \"Location adjacent to an input object field definition.\",\n              isDeprecated: false,\n              name: \"INPUT_FIELD_DEFINITION\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a query operation.\",\n              isDeprecated: false,\n              name: \"QUERY\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to a field.\",\n              isDeprecated: false,\n              name: \"FIELD\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to an inline fragment.\",\n              isDeprecated: false,\n              name: \"INLINE_FRAGMENT\"\n            },\n            {\n              deprecationReason: null,\n              description: \"Location adjacent to an argument definition.\",\n              isDeprecated: false,\n              name: \"ARGUMENT_DEFINITION\"\n            }\n          ],\n          fields: null,\n          inputFields: null,\n          interfaces: null,\n          kind: \"ENUM\",\n          name: \"__DirectiveLocation\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.\",\n          enumValues: null,\n          fields: null,\n          inputFields: null,\n          interfaces: null,\n          kind: \"SCALAR\",\n          name: \"String\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. \",\n          enumValues: null,\n          fields: null,\n          inputFields: null,\n          interfaces: null,\n          kind: \"SCALAR\",\n          name: \"Int\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"The `Boolean` scalar type represents `true` or `false`.\",\n          enumValues: null,\n          fields: null,\n          inputFields: null,\n          interfaces: null,\n          kind: \"SCALAR\",\n          name: \"Boolean\",\n          possibleTypes: null\n        },\n        {\n          description: \"\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"ammoInMagazine\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"ammoReserve\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"type\",\n              type: { kind: \"SCALAR\", name: \"Int\", ofType: null }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"equipment\",\n          possibleTypes: null\n        },\n        {\n          description: \"\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"x\",\n              type: { kind: \"SCALAR\", name: \"Float\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"y\",\n              type: { kind: \"SCALAR\", name: \"Float\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"z\",\n              type: { kind: \"SCALAR\", name: \"Float\", ofType: null }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"position\",\n          possibleTypes: null\n        },\n        {\n          description:\n            \"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.\",\n          enumValues: null,\n          fields: [\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"args\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: {\n                  kind: \"LIST\",\n                  name: null,\n                  ofType: {\n                    kind: \"NON_NULL\",\n                    name: null,\n                    ofType: {\n                      kind: \"OBJECT\",\n                      name: \"__InputValue\",\n                      ofType: null\n                    }\n                  }\n                }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"deprecationReason\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"description\",\n              type: { kind: \"SCALAR\", name: \"String\", ofType: null }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"isDeprecated\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"Boolean\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"name\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"SCALAR\", name: \"String\", ofType: null }\n              }\n            },\n            {\n              args: [],\n              deprecationReason: null,\n              description: \"\",\n              isDeprecated: false,\n              name: \"type\",\n              type: {\n                kind: \"NON_NULL\",\n                name: null,\n                ofType: { kind: \"OBJECT\", name: \"__Type\", ofType: null }\n              }\n            }\n          ],\n          inputFields: null,\n          interfaces: [],\n          kind: \"OBJECT\",\n          name: \"__Field\",\n          possibleTypes: null\n        }\n      ]\n    }\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}